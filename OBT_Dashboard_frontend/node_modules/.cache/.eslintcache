[{"C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\index.tsx":"1","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\App.tsx":"2","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\DashboardBlock.tsx":"3","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\BarChart.tsx":"4","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\DoughnutChart.tsx":"5","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\CastRulesTable.tsx":"6","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\Login.tsx":"7","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\Dashboard.tsx":"8","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\CustomNavBar.tsx":"9","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\api\\FetchData.ts":"10","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\KeyFigures.tsx":"11","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\Detail.tsx":"12","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\api\\AxiosConfig.ts":"13","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\HelpTooltip.tsx":"14"},{"size":540,"mtime":1648044171646,"results":"15","hashOfConfig":"16"},{"size":954,"mtime":1647521500218,"results":"17","hashOfConfig":"16"},{"size":1596,"mtime":1647521500246,"results":"18","hashOfConfig":"16"},{"size":1272,"mtime":1647521500233,"results":"19","hashOfConfig":"16"},{"size":1476,"mtime":1647521500252,"results":"20","hashOfConfig":"16"},{"size":765,"mtime":1647521500237,"results":"21","hashOfConfig":"16"},{"size":1952,"mtime":1648044171632,"results":"22","hashOfConfig":"16"},{"size":7663,"mtime":1647521500243,"results":"23","hashOfConfig":"16"},{"size":874,"mtime":1648056180834,"results":"24","hashOfConfig":"16"},{"size":485,"mtime":1647521500230,"results":"25","hashOfConfig":"16"},{"size":528,"mtime":1647521500258,"results":"26","hashOfConfig":"16"},{"size":970,"mtime":1647521500249,"results":"27","hashOfConfig":"16"},{"size":432,"mtime":1647521500226,"results":"28","hashOfConfig":"16"},{"size":822,"mtime":1647521500255,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"hwdimc",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\index.tsx",["69"],"import ReactDOM from 'react-dom';\r\nimport Login from './Login';\r\nimport App from './App';\r\nimport Detail from './components/Detail';\r\nimport Dashboard from './components/Dashboard';\r\n\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Routes>\r\n      <Route path=\"/\" element={<App />}>\r\n        <Route path=\"/\" element={<Dashboard />} />\r\n      </Route>\r\n      <Route path=\"/login\" element={<Login />} />\r\n    </Routes>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\App.tsx",["70","71","72","73","74","75","76","77","78","79"],"import React from 'react';\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport CustomNavBar from './components/CustomNavBar';\r\nimport BarChart from './components/BarChart';\r\nimport DoughnutChart from './components/DoughnutChart';\r\nimport DashboardBlock from './components/DashboardBlock';\r\nimport CastRulesTable from './components/CastRulesTable';\r\nimport KeyFigures from './components/KeyFigures';\r\nimport { FetchC02EmissionData, DataPoint } from './api/FetchData';\r\n\r\n\r\ninterface AppProps { }\r\n\r\n\r\nclass App extends React.Component<AppProps> {\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"m-0 p-0 bg-light w-100 h-100\" >\r\n        <CustomNavBar />\r\n        <Container className=\"mt-1\">\r\n          <Container fluid>\r\n            <Outlet />\r\n          </Container>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\DashboardBlock.tsx",["80","81"],"import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { ZoomIn } from 'react-bootstrap-icons';\r\n\r\nimport HelpTooltip from './HelpTooltip';\r\n\r\ntype DashBlockProps = {\r\n    title: string,\r\n    helpText?: string,\r\n    shortName: string,\r\n    showDetail: (show: boolean, blockShortName: string) => void,\r\n}\r\n\r\nclass DashboardBlock extends React.Component<DashBlockProps> {\r\n    constructor(props: DashBlockProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        // only display help text if it is provided\r\n        return (\r\n            <Card className=\"my-3\">\r\n                <Card.Body>\r\n                    <Row className=\"\">\r\n                        <Col xs={10}>\r\n                            <Card.Title >\r\n                                {this.props.title}\r\n                                {\" \"}\r\n                                <button className=\"btn btn-link text-decoration-none m-0 p-0 pb-1\" onClick={() => this.props.showDetail(true, this.props.shortName)}><ZoomIn size={15} /></button>\r\n                            </Card.Title>\r\n                        </Col>\r\n\r\n                        {this.props.helpText ?\r\n                            <Col xs={2} className=\"text-end\">\r\n                                <HelpTooltip helpText={this.props.helpText} />\r\n                            </Col>\r\n                            : null}\r\n                    </Row>\r\n                    {this.props.children}\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DashboardBlock;","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\BarChart.tsx",["82"],"import React from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { Measurements } from './Dashboard';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\n\r\ntype BarProps = {\r\n    dates: string[],\r\n    emissions: Measurements[]\r\n}\r\n\r\n\r\nclass BarChart extends React.Component<BarProps> {\r\n    constructor(props: BarProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const data = {\r\n            labels: this.props.dates,\r\n            datasets: this.props.emissions.map((measure) => ({\r\n                label: measure.label,\r\n                backgroundColor: measure.color,\r\n                borderColor: measure.color,\r\n                borderWidth: 0,\r\n                data: measure.dataPoints,\r\n                barThickness: 40,\r\n            }\r\n            ))\r\n        }\r\n        return <Bar data={data} options={{ scales: { x: { stacked: true, }, y: { stacked: true, } }, plugins: { tooltip: { callbacks: { label: function (context) { let label = \" \" + context.formattedValue + \" kg CO2-eq\"; return label; } } } } }\r\n        } />;\r\n    }\r\n}\r\n\r\nexport default BarChart;\r\n","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\DoughnutChart.tsx",["83"],"import React from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, ArcElement } from 'chart.js'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport { Measurements } from './Dashboard';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    ArcElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\n\r\n\r\ntype DoughnutProps = {\r\n    emissions: Measurements[]\r\n}\r\n\r\n\r\nclass DoughnutChart extends React.Component<DoughnutProps> {\r\n    constructor(props: DoughnutProps) {\r\n        super(props);\r\n    }\r\n\r\n    /**\r\n     * Computes the average carbon footprint per month\r\n     */\r\n    avg(dataPoints: number[]) {\r\n        const sum = dataPoints.reduce((a, b) => a + b, 0);\r\n        const avg = (sum / dataPoints.length) || 0;\r\n        return avg;\r\n    }\r\n\r\n    render() {\r\n        const data = {\r\n            labels: this.props.emissions.map((measure) => measure.label),\r\n            datasets: [{\r\n                data: this.props.emissions.map((measure) => this.avg(measure.dataPoints)),\r\n                backgroundColor: this.props.emissions.map((measure) => measure.color),\r\n                hoverOffset: 4,\r\n                cutout: 80\r\n            }]\r\n        }\r\n\r\n        return <Doughnut data={data} width=\"30px\" height=\"30px\" options={{ plugins: { tooltip: { callbacks: { label: function (context) { let label = \" \" + context.formattedValue + \" kg CO2-eq\"; return label; } } } } }} />;\r\n    }\r\n}\r\n\r\nexport default DoughnutChart;","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\CastRulesTable.tsx",["84","85"],"import React from 'react';\r\nimport { Container, Table } from 'react-bootstrap';\r\n\r\ntype CastRulesTableProps = {\r\n  colNames: string[],\r\n  lines: string[][],\r\n}\r\n\r\n\r\nclass CastRulesTable extends React.Component<CastRulesTableProps> {\r\n  constructor(props: CastRulesTableProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table hover>\r\n        <thead>\r\n          <tr>\r\n            {this.props.colNames.map((colName, i) => <th key={i}>{colName}</th>)}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.lines.map(\r\n            (line, i) => <tr key={i}>{line.map(\r\n              (col, j) => <td key={j}>{col}</td>\r\n            )}</tr>\r\n          )}\r\n        </tbody>\r\n      </Table>)\r\n  }\r\n}\r\n\r\nexport default CastRulesTable;","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\Login.tsx",["86","87","88"],"import React from 'react';\r\nimport {Form, Button, Container, Card, Navbar, Nav} from 'react-bootstrap';\r\n\r\n\r\nclass Login extends React.Component<any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Container>\r\n                        <Navbar.Brand href=\"#home\"><img src=\"leaf_icon_green.png\" height={20} /> IT Carbon Footprint (demo)</Navbar.Brand>\r\n                        <Nav className=\"me-auto\">\r\n                        </Nav>\r\n                    </Container>\r\n                </Navbar>\r\n\r\n                <div className=\"d-flex justify-content-around p-5\" style={{backgroundImage: `url(${process.env.PUBLIC_URL + '/background_login.png'})`}}>\r\n                    <Card style={{ width: '18rem', backgroundColor: 'rgba(200, 200, 200, 0.5)'}}>\r\n                        <Card.Body>\r\n                            <h1 className=\"d-flex justify-content-around\">\r\n                                LOGIN\r\n                            </h1>\r\n                            <Form.Group className=\"mb-3 d-flex justify-content-around\" controlId=\"formBasicEmail\">\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3 d-flex justify-content-around\" controlId=\"formBasicPassword\">\r\n                                <Form.Control type=\"password\" placeholder=\"Enter password\" />\r\n                            </Form.Group>\r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <a href=\"/\" className=\"btn btn-primary\" >Submit</a>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;",["89","90"],"C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\Dashboard.tsx",["91","92","93","94","95"],"import React from 'react';\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\nimport BarChart from './BarChart';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport DashboardBlock from './DashboardBlock';\r\nimport CastRulesTable from './CastRulesTable';\r\nimport KeyFigures from './KeyFigures';\r\nimport { FetchC02EmissionData, DataPoint } from '../api/FetchData';\r\nimport Detail from './Detail';\r\n\r\n\r\nconst labels: string[] = [\r\n  'feb. 2021',\r\n  'march 2021',\r\n  'april 2021',\r\n  'may 2021',\r\n  'june 2021',\r\n  'jul. 2021',\r\n  'aug. 2021'\r\n];\r\n\r\n\r\nexport interface Measurements {\r\n  label: string,\r\n  dataPoints: number[],\r\n  color: string,\r\n}\r\n\r\nexport const dataColors = { blue: '#3B82F6', green: '#10B981' }\r\n\r\n\r\n// CAST rules data\r\nlet castRulesColNames: string[] = [\"#\", \"Rule\", \"Critical\"];\r\nlet castRulesLines: string[][] = [\r\n  [\"21\", \"Avoid using LONG and LONG RAW datatype for Table Columns\", \"Yes\"],\r\n  [\"43\", \"Never throw an exception from a Destructor\", \"No\"],\r\n  [\"78\", \"Avoid using nodejs process.exit()\", \"No\"],\r\n  [\"194\", \"Pages should use error handling page\", \"Yes\"],\r\n  [\"205\", \"DEPRECATED: Use of style sheets (JEE)\", \"No\"],\r\n  [\"4064\", \"Avoid Procedures using an Insert, Update, Delete, Create Table or Select without including error management\", \"No\"],\r\n  [\"2590\", \"Avoid using 'On error Resume Next' in the Class event terminate\", \"No\"],\r\n];\r\n\r\n// Key figures data\r\n\r\nlet figData = [\r\n  { figure: 109.23, unit: \"kg CO2-eq\", description: \"Last month evolution\" },\r\n  { figure: 0.2, unit: \"kg CO2-eq\", description: \"Objective emissions per user\" },\r\n  { figure: 13, unit: \"data points\", description: \"Number of measurements\" },\r\n]\r\n\r\ninterface DashboardProps { }\r\n\r\ninterface DashboardState {\r\n  loadingGcp: boolean,\r\n  loadingGreespector: boolean,\r\n  gcpData: Measurements,\r\n  usersData: Measurements,\r\n  dates: string[],\r\n  showDetails: boolean,\r\n  blockDetailShortName: string,\r\n}\r\n\r\nexport default class Dashboard extends React.Component<DashboardProps, DashboardState> {\r\n  constructor(props: DashboardProps) {\r\n    super(props);\r\n    this.state = {\r\n      loadingGcp: true,\r\n      loadingGreespector: true,\r\n      gcpData: { label: 'GCP', dataPoints: [], color: '#3B82F6' },\r\n      usersData: { label: 'user devices', dataPoints: [], color: '#10B981' },\r\n      dates: [],\r\n      showDetails: false,\r\n      blockDetailShortName: ''\r\n    };\r\n\r\n    this.showDetailFunction = this.showDetailFunction.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"fetch data\")\r\n\r\n    // get gcp data\r\n    await FetchC02EmissionData('GCP').then(\r\n      (gcpData: DataPoint[]) => {\r\n        console.log(gcpData);\r\n        // get dates lists and co2 measures\r\n        const dates = gcpData.map(point => point.date);\r\n        const dataPoints = gcpData.map(point => point.gCO2eq);\r\n        // save this data to the state\r\n        this.setState(prevState => ({ gcpData: { ...prevState.gcpData, dataPoints: dataPoints }, dates: dates, loadingGcp: false }))\r\n      });\r\n\r\n    // get greenspector\r\n    await FetchC02EmissionData('greenspector').then(\r\n      (usersData: DataPoint[]) => {\r\n        console.log(usersData);\r\n        // get dates lists and co2 measures\r\n        const dates = usersData.map(point => point.date);\r\n        const dataPoints = usersData.map(point => point.gCO2eq);\r\n        // save this data to the state\r\n        this.setState(prevState => ({ usersData: { ...prevState.usersData, dataPoints: dataPoints }, loadingGreespector: false }))\r\n      });\r\n  }\r\n\r\n  showDetailFunction(show: boolean, blockShortName: string) {\r\n    if (show == false) {\r\n      this.setState({ showDetails: show, blockDetailShortName: '' });\r\n    } else {\r\n      this.setState({ showDetails: show, blockDetailShortName: blockShortName });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.showDetails) {\r\n      // get details of the block to show\r\n      let shortName = this.state.blockDetailShortName;\r\n      // put switch statement here\r\n      switch (shortName) {\r\n        case \"monthly-carbon-emissions\":\r\n          // show this block\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"Monthly CO2-eq. emissions\">\r\n              <BarChart dates={this.state.dates} emissions={[this.state.gcpData, this.state.usersData]} />\r\n            </Detail>\r\n          );\r\n        case \"carbon-avg-emissions\":\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"Monthly avg. carbon footprint proportion\">\r\n              <Container style={{ width: \"70%\" }}>\r\n                <DoughnutChart emissions={[this.state.gcpData, this.state.usersData]} />\r\n              </Container>\r\n            </Detail>\r\n          );\r\n        case \"carbon-map\":\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"Carbon footprint per region\">\r\n              <img src=\"demo_map.png\" className=\"img-fluid m-1\" />\r\n            </Detail>\r\n          );\r\n        case \"cast-score\":\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"CAST rules\">\r\n              <h3 className=\"mb-3 text-center\"><b>3.47 / 5</b></h3>\r\n              <CastRulesTable colNames={castRulesColNames} lines={castRulesLines} />\r\n            </Detail>\r\n          );\r\n        case \"key-figures\":\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"Key figures\">\r\n              <KeyFigures data={figData} />\r\n            </Detail>\r\n          );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        <Col sm={12} md={7} className=\"p-2\">\r\n          <DashboardBlock title=\"Monthly CO2-eq. emissions\" shortName=\"monthly-carbon-emissions\" helpText=\"Raw measured emissions for each scope and service.\" showDetail={this.showDetailFunction}>\r\n            {this.state.loadingGcp || this.state.loadingGreespector ?\r\n              <Container className=\"text-center\">\r\n                <Spinner animation=\"border\" variant=\"primary\" className=\"my-3\" />\r\n              </Container> :\r\n              <BarChart dates={this.state.dates} emissions={[this.state.gcpData, this.state.usersData]} />}\r\n          </DashboardBlock>\r\n\r\n          <DashboardBlock title=\"Carbon footprint per region\" shortName=\"carbon-map\" showDetail={this.showDetailFunction}>\r\n            <img src=\"demo_map.png\" className=\"img-fluid m-1\" />\r\n          </DashboardBlock>\r\n        </Col>\r\n\r\n        <Col sm={12} md={5} className=\"p-2\">\r\n          <DashboardBlock title=\"Key figures\" shortName=\"key-figures\" showDetail={this.showDetailFunction}>\r\n            <KeyFigures data={figData.slice(0, 2)} />\r\n          </DashboardBlock>\r\n\r\n          <DashboardBlock title=\"Monthly avg. carbon footprint proportion\" shortName=\"carbon-avg-emissions\" showDetail={this.showDetailFunction}>\r\n            {this.state.loadingGcp || this.state.loadingGreespector ?\r\n              <Container className=\"text-center\">\r\n                <Spinner animation=\"border\" variant=\"primary\" className=\"my-3\" />\r\n              </Container> :\r\n              <Container style={{ width: \"70%\" }}><DoughnutChart emissions={[this.state.gcpData, this.state.usersData]} /></Container>}\r\n          </DashboardBlock>\r\n\r\n          <DashboardBlock title=\"CAST score\" shortName=\"cast-score\" helpText=\"Score based on CAST code analysis. The rules listed below are examples of actions that may improve this score.\" showDetail={this.showDetailFunction}>\r\n            <h3 className=\"mb-3 text-center\"><b>3.47 / 5</b></h3>\r\n            <CastRulesTable colNames={castRulesColNames} lines={castRulesLines.slice(0, 3)} />\r\n          </DashboardBlock>\r\n        </Col>\r\n\r\n      </Row>\r\n    );\r\n  }\r\n}","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\CustomNavBar.tsx",["96","97"],"import React from 'react';\r\nimport { Navbar, Nav, Container } from 'react-bootstrap';\r\nimport pdf_report from './pdf_report.pdf'\r\n\r\nclass CustomNavBar extends React.Component {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\"><img src=\"/leaf_icon_green.png\" height={20} /> IT Carbon Footprint (demo)</Navbar.Brand>\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"#home\">Settings</Nav.Link>\r\n                        <Nav.Link href=\"/login\">Log out</Nav.Link>\r\n                        <Nav.Link href={pdf_report}>Export PDF</Nav.Link>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomNavBar;","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\api\\FetchData.ts",[],"C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\KeyFigures.tsx",["98"],"import React from 'react';\r\n\r\ntype KeyFigProps = {\r\n    data: { figure: number, unit: string, description: string }[]\r\n}\r\n\r\nclass KeyFigures extends React.Component<KeyFigProps> {\r\n    constructor(props: KeyFigProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul>\r\n                {this.props.data.map((item, i) =>\r\n                    <li key={i}>{item.description} : {item.figure} {item.unit}</li>\r\n                )}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default KeyFigures;","C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\Detail.tsx",[],"C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\api\\AxiosConfig.ts",[],"C:\\Users\\mathi\\Bureau\\it-carbon-footprint\\it-carbon-footprint-frontend\\src\\components\\HelpTooltip.tsx",[],{"ruleId":"99","severity":1,"message":"100","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"103","line":2,"column":21,"nodeType":"101","messageId":"102","endLine":2,"endColumn":24},{"ruleId":"99","severity":1,"message":"104","line":2,"column":26,"nodeType":"101","messageId":"102","endLine":2,"endColumn":29},{"ruleId":"99","severity":1,"message":"105","line":2,"column":31,"nodeType":"101","messageId":"102","endLine":2,"endColumn":38},{"ruleId":"99","severity":1,"message":"106","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":16},{"ruleId":"99","severity":1,"message":"107","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":21},{"ruleId":"99","severity":1,"message":"108","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":22},{"ruleId":"99","severity":1,"message":"109","line":10,"column":8,"nodeType":"101","messageId":"102","endLine":10,"endColumn":22},{"ruleId":"99","severity":1,"message":"110","line":11,"column":8,"nodeType":"101","messageId":"102","endLine":11,"endColumn":18},{"ruleId":"99","severity":1,"message":"111","line":12,"column":10,"nodeType":"101","messageId":"102","endLine":12,"endColumn":30},{"ruleId":"99","severity":1,"message":"112","line":12,"column":32,"nodeType":"101","messageId":"102","endLine":12,"endColumn":41},{"ruleId":"99","severity":1,"message":"113","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":16,"column":5,"nodeType":"116","messageId":"117","endLine":18,"endColumn":6},{"ruleId":"114","severity":1,"message":"115","line":24,"column":5,"nodeType":"116","messageId":"117","endLine":26,"endColumn":6},{"ruleId":"114","severity":1,"message":"115","line":24,"column":5,"nodeType":"116","messageId":"117","endLine":26,"endColumn":6},{"ruleId":"99","severity":1,"message":"118","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":11,"column":3,"nodeType":"116","messageId":"117","endLine":13,"endColumn":4},{"ruleId":"99","severity":1,"message":"119","line":2,"column":15,"nodeType":"101","messageId":"102","endLine":2,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":6,"column":5,"nodeType":"116","messageId":"117","endLine":8,"endColumn":6},{"ruleId":"120","severity":1,"message":"121","line":16,"column":52,"nodeType":"122","endLine":16,"endColumn":97},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"99","severity":1,"message":"127","line":14,"column":7,"nodeType":"101","messageId":"102","endLine":14,"endColumn":23},{"ruleId":"99","severity":1,"message":"128","line":101,"column":15,"nodeType":"101","messageId":"102","endLine":101,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":109,"column":14,"nodeType":"131","messageId":"132","endLine":109,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":140,"column":15,"nodeType":"122","endLine":140,"endColumn":67},{"ruleId":"120","severity":1,"message":"121","line":171,"column":13,"nodeType":"122","endLine":171,"endColumn":65},{"ruleId":"114","severity":1,"message":"115","line":6,"column":5,"nodeType":"116","messageId":"117","endLine":8,"endColumn":6},{"ruleId":"120","severity":1,"message":"121","line":14,"column":44,"nodeType":"122","endLine":14,"endColumn":90},{"ruleId":"114","severity":1,"message":"115","line":8,"column":5,"nodeType":"116","messageId":"117","endLine":10,"endColumn":6},"@typescript-eslint/no-unused-vars","'Detail' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Spinner' is defined but never used.","'BarChart' is defined but never used.","'DoughnutChart' is defined but never used.","'DashboardBlock' is defined but never used.","'CastRulesTable' is defined but never used.","'KeyFigures' is defined but never used.","'FetchC02EmissionData' is defined but never used.","'DataPoint' is defined but never used.","'Link' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Container' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'labels' is assigned a value but never used.","'dates' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]