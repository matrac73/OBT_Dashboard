{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathi\\\\Bureau\\\\it-carbon-footprint\\\\it-carbon-footprint-frontend\\\\src\\\\components\\\\Dashboard.tsx\";\nimport React from 'react';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport '../App.css';\nimport BarChart from './BarChart';\nimport DoughnutChart from './DoughnutChart';\nimport DashboardBlock from './DashboardBlock';\nimport CastRulesTable from './CastRulesTable';\nimport KeyFigures from './KeyFigures';\nimport { FetchC02EmissionData } from '../api/FetchData';\nimport Detail from './Detail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labels = ['feb. 2021', 'march 2021', 'april 2021', 'may 2021', 'june 2021', 'jul. 2021', 'aug. 2021'];\nexport const dataColors = {\n  blue: '#3B82F6',\n  green: '#10B981'\n}; // CAST rules data\n\nlet castRulesColNames = [\"#\", \"Rule\", \"Critical\"];\nlet castRulesLines = [[\"21\", \"Avoid using LONG and LONG RAW datatype for Table Columns\", \"Yes\"], [\"43\", \"Never throw an exception from a Destructor\", \"No\"], [\"78\", \"Avoid using nodejs process.exit()\", \"No\"], [\"194\", \"Pages should use error handling page\", \"Yes\"], [\"205\", \"DEPRECATED: Use of style sheets (JEE)\", \"No\"], [\"4064\", \"Avoid Procedures using an Insert, Update, Delete, Create Table or Select without including error management\", \"No\"], [\"2590\", \"Avoid using 'On error Resume Next' in the Class event terminate\", \"No\"]]; // Key figures data\n\nlet figData = [{\n  figure: 109.23,\n  unit: \"kg CO2-eq\",\n  description: \"Last month evolution\"\n}, {\n  figure: 0.2,\n  unit: \"kg CO2-eq\",\n  description: \"Objective emissions per user\"\n}, {\n  figure: 13,\n  unit: \"data points\",\n  description: \"Number of measurements\"\n}];\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingGcp: true,\n      loadingGreespector: true,\n      gcpData: {\n        label: 'GCP',\n        dataPoints: [],\n        color: '#3B82F6'\n      },\n      usersData: {\n        label: 'user devices',\n        dataPoints: [],\n        color: '#10B981'\n      },\n      dates: [],\n      showDetails: false,\n      blockDetailShortName: ''\n    };\n    this.showDetailFunction = this.showDetailFunction.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log(\"fetch data\"); // get gcp data\n\n    await FetchC02EmissionData('GCP').then(gcpData => {\n      console.log(gcpData); // get dates lists and co2 measures\n\n      const dates = gcpData.map(point => point.date);\n      const dataPoints = gcpData.map(point => point.gCO2eq); // save this data to the state\n\n      this.setState(prevState => ({\n        gcpData: { ...prevState.gcpData,\n          dataPoints: dataPoints\n        },\n        dates: dates,\n        loadingGcp: false\n      }));\n    }); // get greenspector\n\n    await FetchC02EmissionData('greenspector').then(usersData => {\n      console.log(usersData); // get dates lists and co2 measures\n\n      const dates = usersData.map(point => point.date);\n      const dataPoints = usersData.map(point => point.gCO2eq); // save this data to the state\n\n      this.setState(prevState => ({\n        usersData: { ...prevState.usersData,\n          dataPoints: dataPoints\n        },\n        loadingGreespector: false\n      }));\n    });\n  }\n\n  showDetailFunction(show, blockShortName) {\n    if (show == false) {\n      this.setState({\n        showDetails: show,\n        blockDetailShortName: ''\n      });\n    } else {\n      this.setState({\n        showDetails: show,\n        blockDetailShortName: blockShortName\n      });\n    }\n  }\n\n  render() {\n    if (this.state.showDetails) {\n      // get details of the block to show\n      let shortName = this.state.blockDetailShortName; // put switch statement here\n\n      switch (shortName) {\n        case \"monthly-carbon-emissions\":\n          // show this block\n          return /*#__PURE__*/_jsxDEV(Detail, {\n            showDetail: this.showDetailFunction,\n            title: \"Monthly CO2-eq. emissions\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              dates: this.state.dates,\n              emissions: [this.state.gcpData, this.state.usersData]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this);\n\n        case \"carbon-avg-emissions\":\n          return /*#__PURE__*/_jsxDEV(Detail, {\n            showDetail: this.showDetailFunction,\n            title: \"Monthly avg. carbon footprint proportion\",\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              style: {\n                width: \"70%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(DoughnutChart, {\n                emissions: [this.state.gcpData, this.state.usersData]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this);\n\n        case \"carbon-map\":\n          return /*#__PURE__*/_jsxDEV(Detail, {\n            showDetail: this.showDetailFunction,\n            title: \"Carbon footprint per region\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"demo_map.png\",\n              className: \"img-fluid m-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this);\n\n        case \"cast-score\":\n          return /*#__PURE__*/_jsxDEV(Detail, {\n            showDetail: this.showDetailFunction,\n            title: \"CAST rules\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-3 text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"3.47 / 5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CastRulesTable, {\n              colNames: castRulesColNames,\n              lines: castRulesLines\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this);\n\n        case \"key-figures\":\n          return /*#__PURE__*/_jsxDEV(Detail, {\n            showDetail: this.showDetailFunction,\n            title: \"Key figures\",\n            children: /*#__PURE__*/_jsxDEV(KeyFigures, {\n              data: figData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 7,\n        className: \"p-2\",\n        children: [/*#__PURE__*/_jsxDEV(DashboardBlock, {\n          title: \"Monthly CO2-eq. emissions\",\n          shortName: \"monthly-carbon-emissions\",\n          helpText: \"Raw measured emissions for each scope and service.\",\n          showDetail: this.showDetailFunction,\n          children: this.state.loadingGcp || this.state.loadingGreespector ? /*#__PURE__*/_jsxDEV(Container, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"primary\",\n              className: \"my-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(BarChart, {\n            dates: this.state.dates,\n            emissions: [this.state.gcpData, this.state.usersData]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DashboardBlock, {\n          title: \"Carbon footprint per region\",\n          shortName: \"carbon-map\",\n          showDetail: this.showDetailFunction,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"demo_map.png\",\n            className: \"img-fluid m-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 5,\n        className: \"p-2\",\n        children: [/*#__PURE__*/_jsxDEV(DashboardBlock, {\n          title: \"Key figures\",\n          shortName: \"key-figures\",\n          showDetail: this.showDetailFunction,\n          children: /*#__PURE__*/_jsxDEV(KeyFigures, {\n            data: figData.slice(0, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DashboardBlock, {\n          title: \"Monthly avg. carbon footprint proportion\",\n          shortName: \"carbon-avg-emissions\",\n          showDetail: this.showDetailFunction,\n          children: this.state.loadingGcp || this.state.loadingGreespector ? /*#__PURE__*/_jsxDEV(Container, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"primary\",\n              className: \"my-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Container, {\n            style: {\n              width: \"70%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(DoughnutChart, {\n              emissions: [this.state.gcpData, this.state.usersData]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DashboardBlock, {\n          title: \"CAST score\",\n          shortName: \"cast-score\",\n          helpText: \"Score based on CAST code analysis. The rules listed below are examples of actions that may improve this score.\",\n          showDetail: this.showDetailFunction,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-3 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"3.47 / 5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CastRulesTable, {\n            colNames: castRulesColNames,\n            lines: castRulesLines.slice(0, 3)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mathi/Bureau/it-carbon-footprint/it-carbon-footprint-frontend/src/components/Dashboard.tsx"],"names":["React","Container","Row","Col","Spinner","BarChart","DoughnutChart","DashboardBlock","CastRulesTable","KeyFigures","FetchC02EmissionData","Detail","labels","dataColors","blue","green","castRulesColNames","castRulesLines","figData","figure","unit","description","Dashboard","Component","constructor","props","state","loadingGcp","loadingGreespector","gcpData","label","dataPoints","color","usersData","dates","showDetails","blockDetailShortName","showDetailFunction","bind","componentDidMount","console","log","then","map","point","date","gCO2eq","setState","prevState","show","blockShortName","render","shortName","width","slice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\r\n\r\nimport '../App.css';\r\nimport BarChart from './BarChart';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport DashboardBlock from './DashboardBlock';\r\nimport CastRulesTable from './CastRulesTable';\r\nimport KeyFigures from './KeyFigures';\r\nimport { FetchC02EmissionData, DataPoint } from '../api/FetchData';\r\nimport Detail from './Detail';\r\n\r\n\r\nconst labels: string[] = [\r\n  'feb. 2021',\r\n  'march 2021',\r\n  'april 2021',\r\n  'may 2021',\r\n  'june 2021',\r\n  'jul. 2021',\r\n  'aug. 2021'\r\n];\r\n\r\n\r\nexport interface Measurements {\r\n  label: string,\r\n  dataPoints: number[],\r\n  color: string,\r\n}\r\n\r\nexport const dataColors = { blue: '#3B82F6', green: '#10B981' }\r\n\r\n\r\n// CAST rules data\r\nlet castRulesColNames: string[] = [\"#\", \"Rule\", \"Critical\"];\r\nlet castRulesLines: string[][] = [\r\n  [\"21\", \"Avoid using LONG and LONG RAW datatype for Table Columns\", \"Yes\"],\r\n  [\"43\", \"Never throw an exception from a Destructor\", \"No\"],\r\n  [\"78\", \"Avoid using nodejs process.exit()\", \"No\"],\r\n  [\"194\", \"Pages should use error handling page\", \"Yes\"],\r\n  [\"205\", \"DEPRECATED: Use of style sheets (JEE)\", \"No\"],\r\n  [\"4064\", \"Avoid Procedures using an Insert, Update, Delete, Create Table or Select without including error management\", \"No\"],\r\n  [\"2590\", \"Avoid using 'On error Resume Next' in the Class event terminate\", \"No\"],\r\n];\r\n\r\n// Key figures data\r\n\r\nlet figData = [\r\n  { figure: 109.23, unit: \"kg CO2-eq\", description: \"Last month evolution\" },\r\n  { figure: 0.2, unit: \"kg CO2-eq\", description: \"Objective emissions per user\" },\r\n  { figure: 13, unit: \"data points\", description: \"Number of measurements\" },\r\n]\r\n\r\ninterface DashboardProps { }\r\n\r\ninterface DashboardState {\r\n  loadingGcp: boolean,\r\n  loadingGreespector: boolean,\r\n  gcpData: Measurements,\r\n  usersData: Measurements,\r\n  dates: string[],\r\n  showDetails: boolean,\r\n  blockDetailShortName: string,\r\n}\r\n\r\nexport default class Dashboard extends React.Component<DashboardProps, DashboardState> {\r\n  constructor(props: DashboardProps) {\r\n    super(props);\r\n    this.state = {\r\n      loadingGcp: true,\r\n      loadingGreespector: true,\r\n      gcpData: { label: 'GCP', dataPoints: [], color: '#3B82F6' },\r\n      usersData: { label: 'user devices', dataPoints: [], color: '#10B981' },\r\n      dates: [],\r\n      showDetails: false,\r\n      blockDetailShortName: ''\r\n    };\r\n\r\n    this.showDetailFunction = this.showDetailFunction.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"fetch data\")\r\n\r\n    // get gcp data\r\n    await FetchC02EmissionData('GCP').then(\r\n      (gcpData: DataPoint[]) => {\r\n        console.log(gcpData);\r\n        // get dates lists and co2 measures\r\n        const dates = gcpData.map(point => point.date);\r\n        const dataPoints = gcpData.map(point => point.gCO2eq);\r\n        // save this data to the state\r\n        this.setState(prevState => ({ gcpData: { ...prevState.gcpData, dataPoints: dataPoints }, dates: dates, loadingGcp: false }))\r\n      });\r\n\r\n    // get greenspector\r\n    await FetchC02EmissionData('greenspector').then(\r\n      (usersData: DataPoint[]) => {\r\n        console.log(usersData);\r\n        // get dates lists and co2 measures\r\n        const dates = usersData.map(point => point.date);\r\n        const dataPoints = usersData.map(point => point.gCO2eq);\r\n        // save this data to the state\r\n        this.setState(prevState => ({ usersData: { ...prevState.usersData, dataPoints: dataPoints }, loadingGreespector: false }))\r\n      });\r\n  }\r\n\r\n  showDetailFunction(show: boolean, blockShortName: string) {\r\n    if (show == false) {\r\n      this.setState({ showDetails: show, blockDetailShortName: '' });\r\n    } else {\r\n      this.setState({ showDetails: show, blockDetailShortName: blockShortName });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.showDetails) {\r\n      // get details of the block to show\r\n      let shortName = this.state.blockDetailShortName;\r\n      // put switch statement here\r\n      switch (shortName) {\r\n        case \"monthly-carbon-emissions\":\r\n          // show this block\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"Monthly CO2-eq. emissions\">\r\n              <BarChart dates={this.state.dates} emissions={[this.state.gcpData, this.state.usersData]} />\r\n            </Detail>\r\n          );\r\n        case \"carbon-avg-emissions\":\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"Monthly avg. carbon footprint proportion\">\r\n              <Container style={{ width: \"70%\" }}>\r\n                <DoughnutChart emissions={[this.state.gcpData, this.state.usersData]} />\r\n              </Container>\r\n            </Detail>\r\n          );\r\n        case \"carbon-map\":\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"Carbon footprint per region\">\r\n              <img src=\"demo_map.png\" className=\"img-fluid m-1\" />\r\n            </Detail>\r\n          );\r\n        case \"cast-score\":\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"CAST rules\">\r\n              <h3 className=\"mb-3 text-center\"><b>3.47 / 5</b></h3>\r\n              <CastRulesTable colNames={castRulesColNames} lines={castRulesLines} />\r\n            </Detail>\r\n          );\r\n        case \"key-figures\":\r\n          return (\r\n            <Detail showDetail={this.showDetailFunction} title=\"Key figures\">\r\n              <KeyFigures data={figData} />\r\n            </Detail>\r\n          );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        <Col sm={12} md={7} className=\"p-2\">\r\n          <DashboardBlock title=\"Monthly CO2-eq. emissions\" shortName=\"monthly-carbon-emissions\" helpText=\"Raw measured emissions for each scope and service.\" showDetail={this.showDetailFunction}>\r\n            {this.state.loadingGcp || this.state.loadingGreespector ?\r\n              <Container className=\"text-center\">\r\n                <Spinner animation=\"border\" variant=\"primary\" className=\"my-3\" />\r\n              </Container> :\r\n              <BarChart dates={this.state.dates} emissions={[this.state.gcpData, this.state.usersData]} />}\r\n          </DashboardBlock>\r\n\r\n          <DashboardBlock title=\"Carbon footprint per region\" shortName=\"carbon-map\" showDetail={this.showDetailFunction}>\r\n            <img src=\"demo_map.png\" className=\"img-fluid m-1\" />\r\n          </DashboardBlock>\r\n        </Col>\r\n\r\n        <Col sm={12} md={5} className=\"p-2\">\r\n          <DashboardBlock title=\"Key figures\" shortName=\"key-figures\" showDetail={this.showDetailFunction}>\r\n            <KeyFigures data={figData.slice(0, 2)} />\r\n          </DashboardBlock>\r\n\r\n          <DashboardBlock title=\"Monthly avg. carbon footprint proportion\" shortName=\"carbon-avg-emissions\" showDetail={this.showDetailFunction}>\r\n            {this.state.loadingGcp || this.state.loadingGreespector ?\r\n              <Container className=\"text-center\">\r\n                <Spinner animation=\"border\" variant=\"primary\" className=\"my-3\" />\r\n              </Container> :\r\n              <Container style={{ width: \"70%\" }}><DoughnutChart emissions={[this.state.gcpData, this.state.usersData]} /></Container>}\r\n          </DashboardBlock>\r\n\r\n          <DashboardBlock title=\"CAST score\" shortName=\"cast-score\" helpText=\"Score based on CAST code analysis. The rules listed below are examples of actions that may improve this score.\" showDetail={this.showDetailFunction}>\r\n            <h3 className=\"mb-3 text-center\"><b>3.47 / 5</b></h3>\r\n            <CastRulesTable colNames={castRulesColNames} lines={castRulesLines.slice(0, 3)} />\r\n          </DashboardBlock>\r\n        </Col>\r\n\r\n      </Row>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}