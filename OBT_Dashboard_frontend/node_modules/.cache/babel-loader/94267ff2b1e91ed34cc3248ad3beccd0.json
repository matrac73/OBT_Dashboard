{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathi\\\\Bureau\\\\it-carbon-footprint\\\\it-carbon-footprint-frontend\\\\src\\\\components\\\\DoughnutChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, ArcElement, Title, Tooltip, Legend);\n\nclass DoughnutChart extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  /**\r\n   * Computes the average carbon footprint per month\r\n   */\n\n\n  avg(dataPoints) {\n    const sum = dataPoints.reduce((a, b) => a + b, 0);\n    const avg = sum / dataPoints.length || 0;\n    return avg;\n  }\n\n  render() {\n    const data = {\n      labels: this.props.emissions.map(measure => measure.label),\n      datasets: [{\n        data: this.props.emissions.map(measure => this.avg(measure.dataPoints)),\n        backgroundColor: this.props.emissions.map(measure => measure.color),\n        hoverOffset: 4,\n        cutout: 80\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      width: \"30px\",\n      height: \"30px\",\n      options: {\n        plugins: {\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                let label = \" \" + context.formattedValue + \" kg CO2-eq\";\n                return label;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default DoughnutChart;","map":{"version":3,"sources":["C:/Users/mathi/Bureau/it-carbon-footprint/it-carbon-footprint-frontend/src/components/DoughnutChart.tsx"],"names":["React","Chart","ChartJS","CategoryScale","LinearScale","Title","Tooltip","Legend","ArcElement","Doughnut","register","DoughnutChart","Component","constructor","props","avg","dataPoints","sum","reduce","a","b","length","render","data","labels","emissions","map","measure","label","datasets","backgroundColor","color","hoverOffset","cutout","plugins","tooltip","callbacks","context","formattedValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAuDC,KAAvD,EAA8DC,OAA9D,EAAuEC,MAAvE,EAA+EC,UAA/E,QAAiG,UAAjG;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAIAP,OAAO,CAACQ,QAAR,CACIP,aADJ,EAEIC,WAFJ,EAGII,UAHJ,EAIIH,KAJJ,EAKIC,OALJ,EAMIC,MANJ;;AAgBA,MAAMI,aAAN,SAA4BX,KAAK,CAACY,SAAlC,CAA2D;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAuB;AAC9B,UAAMA,KAAN;AACH;AAED;AACJ;AACA;;;AACIC,EAAAA,GAAG,CAACC,UAAD,EAAuB;AACtB,UAAMC,GAAG,GAAGD,UAAU,CAACE,MAAX,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAhC,EAAmC,CAAnC,CAAZ;AACA,UAAML,GAAG,GAAIE,GAAG,GAAGD,UAAU,CAACK,MAAlB,IAA6B,CAAzC;AACA,WAAON,GAAP;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,KAAKV,KAAL,CAAWW,SAAX,CAAqBC,GAArB,CAA0BC,OAAD,IAAaA,OAAO,CAACC,KAA9C,CADC;AAETC,MAAAA,QAAQ,EAAE,CAAC;AACPN,QAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWW,SAAX,CAAqBC,GAArB,CAA0BC,OAAD,IAAa,KAAKZ,GAAL,CAASY,OAAO,CAACX,UAAjB,CAAtC,CADC;AAEPc,QAAAA,eAAe,EAAE,KAAKhB,KAAL,CAAWW,SAAX,CAAqBC,GAArB,CAA0BC,OAAD,IAAaA,OAAO,CAACI,KAA9C,CAFV;AAGPC,QAAAA,WAAW,EAAE,CAHN;AAIPC,QAAAA,MAAM,EAAE;AAJD,OAAD;AAFD,KAAb;AAUA,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEV,IAAhB;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAmC,MAAA,MAAM,EAAC,MAA1C;AAAiD,MAAA,OAAO,EAAE;AAAEW,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAER,cAAAA,KAAK,EAAE,UAAUS,OAAV,EAAmB;AAAE,oBAAIT,KAAK,GAAG,MAAMS,OAAO,CAACC,cAAd,GAA+B,YAA3C;AAAyD,uBAAOV,KAAP;AAAe;AAAtG;AAAb;AAAX;AAAX;AAA1D;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AA1BsD;;AA6B3D,eAAejB,aAAf","sourcesContent":["import React from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, ArcElement } from 'chart.js'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport { Measurements } from './Dashboard';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    ArcElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\n\r\n\r\ntype DoughnutProps = {\r\n    emissions: Measurements[]\r\n}\r\n\r\n\r\nclass DoughnutChart extends React.Component<DoughnutProps> {\r\n    constructor(props: DoughnutProps) {\r\n        super(props);\r\n    }\r\n\r\n    /**\r\n     * Computes the average carbon footprint per month\r\n     */\r\n    avg(dataPoints: number[]) {\r\n        const sum = dataPoints.reduce((a, b) => a + b, 0);\r\n        const avg = (sum / dataPoints.length) || 0;\r\n        return avg;\r\n    }\r\n\r\n    render() {\r\n        const data = {\r\n            labels: this.props.emissions.map((measure) => measure.label),\r\n            datasets: [{\r\n                data: this.props.emissions.map((measure) => this.avg(measure.dataPoints)),\r\n                backgroundColor: this.props.emissions.map((measure) => measure.color),\r\n                hoverOffset: 4,\r\n                cutout: 80\r\n            }]\r\n        }\r\n\r\n        return <Doughnut data={data} width=\"30px\" height=\"30px\" options={{ plugins: { tooltip: { callbacks: { label: function (context) { let label = \" \" + context.formattedValue + \" kg CO2-eq\"; return label; } } } } }} />;\r\n    }\r\n}\r\n\r\nexport default DoughnutChart;"]},"metadata":{},"sourceType":"module"}