{"ast":null,"code":"var _jsxFileName = \"/frontend_code/src/components/DoughnutChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, ArcElement, Title, Tooltip, Legend);\nconst dataColors = {\n  blue: '#3B82F6',\n  green: '#10B981'\n};\nconst data = {\n  labels: ['Cloud GCP', 'Users Devices'],\n  datasets: [{\n    label: 'My First Dataset',\n    data: [57.34, 310.21],\n    backgroundColor: [dataColors.green, dataColors.blue],\n    hoverOffset: 4,\n    cutout: 80\n  }]\n};\n\nclass DoughnutChart extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      width: \"30px\",\n      height: \"30px\",\n      options: {\n        plugins: {\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                let label = \" \" + context.formattedValue + \" kg CO2-eq\";\n                return label;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default DoughnutChart;","map":{"version":3,"sources":["/frontend_code/src/components/DoughnutChart.tsx"],"names":["React","Chart","ChartJS","CategoryScale","LinearScale","Title","Tooltip","Legend","ArcElement","Doughnut","register","dataColors","blue","green","data","labels","datasets","label","backgroundColor","hoverOffset","cutout","DoughnutChart","Component","constructor","props","render","plugins","tooltip","callbacks","context","formattedValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAuDC,KAAvD,EAA8DC,OAA9D,EAAuEC,MAAvE,EAA+EC,UAA/E,QAAiG,UAAjG;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEAP,OAAO,CAACQ,QAAR,CACIP,aADJ,EAEIC,WAFJ,EAGII,UAHJ,EAIIH,KAJJ,EAKIC,OALJ,EAMIC,MANJ;AAUA,MAAMI,UAAU,GAAG;AAAEC,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAnB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAE,CACJ,WADI,EAEJ,eAFI,CADC;AAKTC,EAAAA,QAAQ,EAAE,CAAC;AACPC,IAAAA,KAAK,EAAE,kBADA;AAEPH,IAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,MAAR,CAFC;AAGPI,IAAAA,eAAe,EAAE,CACbP,UAAU,CAACE,KADE,EAEbF,UAAU,CAACC,IAFE,CAHV;AAOPO,IAAAA,WAAW,EAAE,CAPN;AAQPC,IAAAA,MAAM,EAAE;AARD,GAAD;AALD,CAAb;;AAiBA,MAAMC,aAAN,SAA4BrB,KAAK,CAACsB,SAAlC,CAAiD;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEX,IAAhB;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAmC,MAAA,MAAM,EAAC,MAA1C;AAAiD,MAAA,OAAO,EAAE;AAACY,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAEX,cAAAA,KAAK,EAAE,UAAUY,OAAV,EAAmB;AAAE,oBAAIZ,KAAK,GAAG,MAAMY,OAAO,CAACC,cAAd,GAA+B,YAA3C;AAAyD,uBAAOb,KAAP;AAAe;AAAtG;AAAb;AAAX;AAAV;AAA1D;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAP4C;;AAUjD,eAAeI,aAAf","sourcesContent":["import React from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, ArcElement } from 'chart.js'\r\nimport { Doughnut } from 'react-chartjs-2'\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    ArcElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\n\r\nconst dataColors = { blue: '#3B82F6', green: '#10B981' }\r\n\r\nconst data = {\r\n    labels: [\r\n        'Cloud GCP',\r\n        'Users Devices',\r\n    ],\r\n    datasets: [{\r\n        label: 'My First Dataset',\r\n        data: [57.34, 310.21],\r\n        backgroundColor: [\r\n            dataColors.green,\r\n            dataColors.blue\r\n        ],\r\n        hoverOffset: 4,\r\n        cutout: 80\r\n    }]\r\n}\r\n\r\nclass DoughnutChart extends React.Component<any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <Doughnut data={data} width=\"30px\" height=\"30px\" options={{plugins: { tooltip: { callbacks: { label: function (context) { let label = \" \" + context.formattedValue + \" kg CO2-eq\"; return label; } } } } }} />;\r\n    }\r\n}\r\n\r\nexport default DoughnutChart;"]},"metadata":{},"sourceType":"module"}